//-----------------------------------------------------------cuentaBotones----------------------------------------------------------------------------
package cajero;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JPanel;


public class CuentasBotones extends javax.swing.JFrame {
    static String tarjeta;
    public Fondo imagen = new Fondo(); 

    /**
     * Constructor de la clase CuentasBotones.
     * @param tarjeta Número de tarjeta para el que se mostrarán las cuentas.
     */
    public CuentasBotones(String tarjeta) {
        this.setLocationRelativeTo(null);
        this.tarjeta = tarjeta;
        initComponents();
        setResizable(false);
        agregarBotonesPeliculas();
        setLocationRelativeTo(null);
    }

    /**
     * Método para obtener las cuentas asociadas a una tarjeta desde un archivo de texto.
     * @param tarjeta Número de tarjeta para el que se obtienen las cuentas.
     * @return Arreglo de cadenas que contiene los nombres de las cuentas.
     */
    private String[] obtenerCuentas(String tarjeta) {
        String archivoPath = "C:\\Users\\fband\\Downloads\\cajero (1)\\cajero\\tarjetas\\" + tarjeta + ".txt";
        File archivo = new File(archivoPath);
        ArrayList<String> nCuentas = new ArrayList<>();
        try (BufferedReader br = new BufferedReader(new FileReader(archivo))) {
            String linea;
            while ((linea = br.readLine()) != null) {
                if (!linea.contains(":")) {
                    nCuentas.add(linea);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return nCuentas.toArray(new String[0]);
    }

    String nncuentas = "";

    /**
     * Método para agregar botones de cuentas a la interfaz gráfica.
     */
    private void agregarBotonesPeliculas() {
        String[] ncuentas = obtenerCuentas(tarjeta);
        for (String nombre : ncuentas) {
            JButton boton = new JButton(nombre);
            // Configuración del botón con color de fondo y color de texto personalizados
            configurarBotonConColor(boton, Color.RED, Color.WHITE);
            boton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    nncuentas = nombre;
                    menu pel = new menu(tarjeta, nncuentas);
                    pel.setVisible(true);
                    dispose();
                }
            });
            panelDeCuentas.add(boton);
        }
    }

    /**
     * Método para configurar el color de fondo y el color de texto de un botón.
     * @param boton Botón al que se le aplicarán los colores.
     * @param colorFondo Color de fondo del botón.
     * @param colorTexto Color del texto del botón.
     */
    public void configurarBotonConColor(JButton boton, Color colorFondo, Color colorTexto) {
        boton.setBackground(colorFondo);
        boton.setForeground(colorTexto);
        // Configuración de la fuente del botón en negrita y tamaño 42
        boton.setFont(boton.getFont().deriveFont(java.awt.Font.BOLD, 42f));
        boton.setOpaque(true);
        boton.setBorderPainted(false);
    }

    /**
     * Método generado automáticamente que inicializa y configura los componentes de la interfaz gráfica.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        panelDeCuentas = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelDeCuentas.setLayout(new java.awt.GridLayout(0, 2));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelDeCuentas, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelDeCuentas, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    /**
     * Método principal que inicia la aplicación.
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CuentasBotones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CuentasBotones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CuentasBotones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CuentasBotones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CuentasBotones(tarjeta).setVisible(true);
            }
        });
    }
    
    /**
     * Clase interna para el panel de fondo personalizado.
     */
    class Fondo extends JPanel {
        private Image imagen;

        @Override
        public void paint(Graphics g) {
            imagen = new ImageIcon(getClass().getResource("/imagenes/fondo.png")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }
     
    /**
     * Método para configurar un icono para un botón.
     * @param url URL de la imagen del icono.
     * @param b Botón al que se le asignará el icono.
     * @return Icono configurado para el botón.
     */
    public Icon setIcono(String url, JButton b){
         ImageIcon  icon= new ImageIcon(getClass().getResource(url)); 
         int ancho =b.getWidth();
         int alto =b.getHeight();
         ImageIcon icono= new ImageIcon(icon.getImage().getScaledInstance(ancho,alto,Image.SCALE_DEFAULT)); 
         return icono;
     }
     
    public Icon setIconoPrecionado(String url,JButton b,int ancho,int alto){
       
         ImageIcon icon= new ImageIcon(getClass().getResource(url));
          int  width = b.getWidth()- ancho;
          int height = b.getHeight() - alto;
          ImageIcon icono = new ImageIcon(icon.getImage().getScaledInstance(width,height,Image.SCALE_DEFAULT));
          return icono;
     }
    // Variables  declaradas  definidas no modificar                   
    private javax.swing.JButton confirmar;
    private javax.swing.JLabel imagen2;
    private javax.swing.JTextField numCuenta;
    private javax.swing.JLabel texto1;
    private javax.swing.JLabel texto4;
    private javax.swing.JLabel texto6;
    // fin                  
}
    
